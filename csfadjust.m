%csf adjust%% The main file for running Carolin's experimentclear allclear mex% MaySetup; %%What did this contain? GetFilename?  lMin/lMax? csfparams;disp('adjust contrast till barely visible using z and /');disp('x to move on the next stimulus');% filename=GetFileName;green=0;blue=0;grating=MakeGrating(1, 0, params.realap, params.pixperdeg, 0);grating=MakeAperture(grating, 'BARBER', params.apwindow, params.realap, params.pixperdeg);start=params.res(2)/2;shift=((params.res(1)-params.res(2))/2);starthoriz=round(shift + start(1, :)-(size(grating, 1)/2));finishhoriz=round(shift + start(1, :)+(size(grating, 1)/2)-1);startvert= round(start-(size(grating, 1)/2));finishvert=round( start+(size(grating, 1)/2)-1);bigblank=zeros(params.res(2), params.res(1));% is the screen size of computerx=linspace(-pi, pi, 255);contrast=params.contrast;params.lmax=params.backlum+(contrast*params.backlum);params.lmin=params.backlum-(contrast*params.backlum);temp=RLtoP(scale(sin(x), params.lmin, params.lmax))';mygray(1, :)=[RLtoP(params.backlum) green blue];mygray(2:256, 1)=temp;mygray(2:256, 2:3)=0;myblank=repmat([RLtoP(params.backlum) green blue], 256, 1);window=screen(params.screennumber,'OpenWindow',1, [],8);HideCursor;bigimage=bigblank;	data=zeros(params.ntrials, length(params.spfreq),4);% load rclrdata;for n=1:params.ntrials	for s=1:length(params.spfreq)		screen(window, 'SetClut', myblank);		contrast=params.contrast;		params.lmax=params.backlum+(contrast*params.backlum);		params.lmin=params.backlum-(contrast*params.backlum);        %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%DISABLED BY TS TO MAKE CODE GO%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		if (params.lmax>l_range(2))  			disp('WARNING - MAX LUMINANCE VALUE OUT OF RANGE');			SysBeep; SysBeep; SysBeep; SysBeep;			params.lmax=l_range(2);		elseif (params.lmin<l_range(1) )			disp('WARNING - MIN LUMINANCE VALUE OUT OF RANGE');			params.lmin=l_range(1);			SysBeep; SysBeep; SysBeep; SysBeep;        end%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%		temp=RLtoP(scale(sin(x), params.lmin, params.lmax))';		mygray(2:256, 1)=temp;		sf=params.spfreq(s);		grating=MakeGrating(sf, 0, params.realap, params.pixperdeg, 0);		grating=MakeAperture(grating, 'BARBER', params.apwindow, params.realap, params.pixperdeg);			bigimage(startvert:finishvert,starthoriz:finishhoriz)=grating;			 		screen(window, 'PutImage',bigimage);			trialover=0;cl=1;		while trialover==0				cl=mod(cl, params.sclut(2))+1;			if cl<params.sclut(1)				screen(window, 'SetClut', mygray);			elseif (cl>params.sclut(1) & cl<=params.sclut(2))			%	screen(window, 'SetClut', myblank);			end						[keyIsDown,secs,keyCode] = KbCheck;  			cl=cl+1;			if keyIsDown	% if you hit a key and...				params.lmax=params.backlum+(contrast*params.backlum);				params.lmin=params.backlum-(contrast*params.backlum);								if params.lmax>l_range(2) ; params.lmax=l_range(2);data(n,s, 4)=-1; SysBeep; end				if params.lmin<l_range(1); params.lmin=l_range(1);data(n, s,4)=-1;SysBeep; end								temp=RLtoP(scale(sin(x), params.lmin, params.lmax))';				mygray(2:256, 1)=temp;				if (find(keyCode)==7);  % if 'z' on keyboard you hit					contrast=contrast-params.inc; %trial is over, move to next trial. 									elseif (find(keyCode)==45); % if '/' on keyboard you hit					contrast=contrast+params.inc; %trial is over, move to next trial. 									elseif find(keyCode)==8; % if 'x'=> by hitting x you move to next contrast					SysBeep;					trialover=1;					data(n, s,1:3)=[n sf contrast]; 					screen(window, 'SetClut', myblank);				end					if contrast<0					contrast=0;				end			end			end	endendsave(filename)screen('CloseAll');ShowCursor;  clear mex % data - first column is trial number, % second is the spatial freq% third is contrast% 4th is whether hit max contrast for ct=1:length(params.spfreq)	 tmp=find(data(:,ct, 2)==params.spfreq(ct));	 	cont(ct, :)=data(tmp,ct, 3)'; % first (radial) stimulus faster	mcont(ct)=mean(cont(ct, :));	scont(ct)=std(cont(ct, :));	mxout(ct)=sum(find(data(tmp,ct, 4)==-1));endfigure(1)plot(params.spfreq, mcont);hold onerrorbar(params.spfreq, mcont, scont);figure(2)plot(params.spfreq, 1./log(mcont));hold onerrorbar(params.spfreq, 1./log(mcont),  1./log(mcont+scont)-1./log(mcont-scont))plot(params.spfreq,(mxout>0), '*') disp('');disp('');