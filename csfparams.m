%csfparams.m%%contains all the parameters we are going to useparams.inc=.005; %the smallest increment in contrast% cycles per second. Must go up in increments of 1dps params.spfreq=[.25 0.9800 1.25];  %spatial freq of the Gabors=circle% 0.2500  0.56  0.98  1.31  1.57  1.96  2.62  3.9200]params.ntrials=3; %number of presentations per sfparams.prestime=1; %rate Hz on-off  %luminance parametersparams.backlum=16.9; % in cd/m2params.contrast=.3; % percent in Michelson contrast params.lmax=params.backlum+(params.contrast*params.backlum);params.lmin=params.backlum-(params.contrast*params.backlum); % Michelson contrast =lmax-lmin/(lmax+lmin)load clrdata;if (params.lmax>l_range(2))  	disp('WARNING - MAX LUMINANCE VALUE OUT OF RANGE');elseif (params.lmin<l_range(1) )	disp('WARNING - MIN LUMINANCE VALUE OUT OF RANGE');end%%%%THIS NEEDS TO BE MEASUREDparams.interstim=.3; %the interstimulus pause between each trial 					params.screendeg=params.res.*params.degperpix;params.apwindow=[18 18]; % the size of the aperture radius half-WIDTH AND half-HEIGHTparams.realap=2*max(params.apwindow(:));% is the diameter/ a square in degrees; takes the maximum value of the aperturewindowparams.realappix=round(params.realap*params.pixperdeg);params.sclut=round([params.framerate/(params.prestime*2) params.framerate/(params.prestime)]); %calculates the framerate of the computerif(0)% this code measures the framerate of the computer	[wp, rect]=screen(params.screennumber, 'OpenWindow', 127, [], []);%127=color gray,[]=size window, [] = pixel depth.	blank=repmat(127, 256, 3); 	tic 	for k=1:200%make 200 frames while the time to do this is measured		screen(wp,'SetClut',blank );	end;	cluttime=toc;		params.framerate=1/(cluttime/200);%get frames per second	disp(['framerate = ', num2str(params.framerate)]);	screen('CloseAll');%close the screen windowend